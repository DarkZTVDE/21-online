@use "sass:math";

@mixin cardTransform($offset-x, $offset-y, $angle) {
  transform: translate(
    calc(
      (-50% - var(--playing-table-height) * $offset-x) *
        math.round(math.cos($angle * 1deg))
    ),
    calc(
      (-50% - var(--playing-table-height) * $offset-y) *
        math.round(math.sin($angle * 1deg))
    )
  );
}

/// Modified from https://css-tricks.com/snippets/sass/placing-items-circle/
@mixin playingTable($players-count, $card-position) {
  position: relative;
  border-radius: 100%;

  > * {
    position: absolute;

    $angleStep: calc(360 / $players-count);
    $angle: 270;

    @for $i from 1 through $players-count {
      &:nth-child(#{$i}) {
        left: calc(50% * math.cos($angle * 1deg) + 50%);
        top: calc(50% * math.sin($angle * 1deg) + 50%);
        transform: translate(-50%, -50%);
        z-index: 20;

        //Used for card enter/leave animations
        --card-translation-x: #{calc(-100% * math.cos($angle * 1deg))};
        --card-translation-y: #{calc(-100% * math.sin($angle * 1deg))};

        //Sets the initial cards position
        ::ng-deep .card-holder {
          @include cardTransform(0.125, 0.1, $angle);

          @screen 2xl {
            @include cardTransform(0.1, 0.08, $angle);
          }
        }
      }

      $angle: $angle + $angleStep;
    }
  }
}

::ng-deep :root {
  --playing-table-aspect-ratio: 2/1;
  --playing-table-height: clamp(
    250px,
    100vh - 300px,
    80vw / var(--playing-table-aspect-ratio)
  );
}

.player-holder {
  //First argument should be gameConfig.maxClients + 1
  @include playingTable(8, 0.5);
  @apply bg-green-600;

  aspect-ratio: var(--playing-table-aspect-ratio);
  height: var(--playing-table-height);
}

//Create font sizes that are relative to playing table size
::ng-deep .table-font-2xl {
  font-size: calc(var(--playing-table-height) * 0.08);
  line-height: calc(var(--playing-table-height) * 0.12);
}

::ng-deep .table-font-xl {
  font-size: calc(var(--playing-table-height) * 0.04);
  line-height: calc(var(--playing-table-height) * 0.06);
}

::ng-deep .table-font-lg {
  font-size: calc(var(--playing-table-height) * 0.04);
  line-height: calc(var(--playing-table-height) * 0.06);

  @screen 2xl {
    font-size: calc(var(--playing-table-height) * 0.03);
    line-height: calc(var(--playing-table-height) * 0.045);
  }
}

::ng-deep .table-font {
  font-size: calc(var(--playing-table-height) * 0.036);
  line-height: calc(var(--playing-table-height) * 0.042);

  @screen 2xl {
    font-size: calc(var(--playing-table-height) * 0.024);
    line-height: calc(var(--playing-table-height) * 0.03);
  }
}

::ng-deep .table-font-sm {
  font-size: calc(var(--playing-table-height) * 0.028);
  line-height: calc(var(--playing-table-height) * 0.042);

  @screen 2xl {
    font-size: calc(var(--playing-table-height) * 0.02);
    line-height: calc(var(--playing-table-height) * 0.03);
  }
}
